version: '3'

networks:
  hohoho:

services:
  trello-api:
    security_opt:
      - seccomp:unconfined
    build:
      context: .
      args:
        - VER=1.0
    ports:
      - "80:8080"
      - "443:443"
      - "40000:40000"
    depends_on:
      - postgres
      - redis
      - security
      - file-loader
    networks:
      - hohoho
    environment:
      - DEPLOYAPI
    tty: true
    stdin_open: true

  security:
    build:
      context: .
      dockerfile: ./session_service/Dockerfile
      args:
        - VER=1.0
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - hohoho
    environment:
      - DEPLOYAPI
    tty: true
    stdin_open: true

  file-loader:
    build:
      context: .
      dockerfile: ./file_service/Dockerfile
      args:
        - VER=1.0
    ports:
      - "8082:8082"
    networks:
      - hohoho
    environment:
      - DEPLOYAPI
    tty: true
    stdin_open: true

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: trello
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
    ports:
      - "5432:5432"
    networks:
      - hohoho

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - hohoho

  prometheus:
    image: quay.io/prometheus/prometheus
    container_name: prometheus
    volumes:
      - ./build/config:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090
    networks:
      - hohoho
#  nodeexporter:
#    image: prom/node-exporter:latest
#    container_name: nodeexporter
#    user: root
#    privileged: true
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - :/rootfs:ro
#    command:
#      - '--path.procfs=/host/proc'
#      - '--path.sysfs=/host/sys'
#      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
#    restart: unless-stopped
#    expose:
#      - 9100
#    networks:
#      - hohoho

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    links:
      - prometheus
    ports:
      - 3001:3001
    networks:
      - hohoho

volumes:
  prometheus_data:
  grafana_data: