// Code generated by protoc-gen-go. DO NOT EDIT.
// source: session-grpc.proto

package file

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type File struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_33bdf83d440e1b7e, []int{0}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *File) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type FileID struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileID) Reset()         { *m = FileID{} }
func (m *FileID) String() string { return proto.CompactTextString(m) }
func (*FileID) ProtoMessage()    {}
func (*FileID) Descriptor() ([]byte, []int) {
	return fileDescriptor_33bdf83d440e1b7e, []int{1}
}

func (m *FileID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileID.Unmarshal(m, b)
}
func (m *FileID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileID.Marshal(b, m, deterministic)
}
func (m *FileID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileID.Merge(m, src)
}
func (m *FileID) XXX_Size() int {
	return xxx_messageInfo_FileID.Size(m)
}
func (m *FileID) XXX_DiscardUnknown() {
	xxx_messageInfo_FileID.DiscardUnknown(m)
}

var xxx_messageInfo_FileID proto.InternalMessageInfo

func (m *FileID) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type Nothing struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_33bdf83d440e1b7e, []int{2}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func init() {
	proto.RegisterType((*File)(nil), "file.File")
	proto.RegisterType((*FileID)(nil), "file.FileID")
	proto.RegisterType((*Nothing)(nil), "file.Nothing")
}

func init() { proto.RegisterFile("session-grpc.proto", fileDescriptor_33bdf83d440e1b7e) }

var fileDescriptor_33bdf83d440e1b7e = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xcf, 0xc1, 0x0b, 0x82, 0x30,
	0x14, 0xc7, 0x71, 0x15, 0x31, 0x7c, 0x58, 0x87, 0x77, 0x12, 0x4f, 0xb2, 0x93, 0x14, 0x79, 0xa8,
	0x7f, 0x61, 0x04, 0x83, 0xea, 0x20, 0xf4, 0x07, 0xac, 0x5c, 0x36, 0x92, 0x3d, 0x99, 0x42, 0xff,
	0x7e, 0x6c, 0x45, 0x45, 0xb7, 0xef, 0xe1, 0xb3, 0xfd, 0x78, 0x80, 0xa3, 0x1a, 0x47, 0x4d, 0x66,
	0xdd, 0xd9, 0xe1, 0x52, 0x0f, 0x96, 0x26, 0xc2, 0xf8, 0xaa, 0x7b, 0xc5, 0x96, 0x10, 0xef, 0x74,
	0xaf, 0x70, 0x01, 0x91, 0xe0, 0x79, 0x58, 0x86, 0x55, 0xda, 0x44, 0x82, 0x23, 0x42, 0xdc, 0xca,
	0x49, 0xe6, 0x51, 0x19, 0x56, 0x59, 0xe3, 0x9b, 0xe5, 0x90, 0x38, 0x2b, 0xf8, 0xbf, 0x66, 0x29,
	0xcc, 0x8e, 0x34, 0xdd, 0xb4, 0xe9, 0x36, 0x77, 0x40, 0xe1, 0xd4, 0x9e, 0x64, 0xab, 0xec, 0x41,
	0x1a, 0xd9, 0x29, 0x8b, 0x2b, 0xc8, 0x38, 0x3d, 0x4c, 0x4f, 0xb2, 0xf5, 0x73, 0x50, 0xbb, 0xf5,
	0xda, 0x75, 0x31, 0x7f, 0xf5, 0xfb, 0x03, 0x16, 0x60, 0x05, 0x70, 0x1a, 0x3e, 0x34, 0xfb, 0x52,
	0xc1, 0x8b, 0x9f, 0x87, 0x2c, 0x38, 0x27, 0xfe, 0x94, 0xed, 0x33, 0x00, 0x00, 0xff, 0xff, 0x07,
	0x40, 0xec, 0x04, 0xe0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IFileLoaderManagerClient is the client API for IFileLoaderManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IFileLoaderManagerClient interface {
	DownloadFile(ctx context.Context, in *File, opts ...grpc.CallOption) (*Nothing, error)
	UploadFile(ctx context.Context, in *FileID, opts ...grpc.CallOption) (*File, error)
}

type iFileLoaderManagerClient struct {
	cc *grpc.ClientConn
}

func NewIFileLoaderManagerClient(cc *grpc.ClientConn) IFileLoaderManagerClient {
	return &iFileLoaderManagerClient{cc}
}

func (c *iFileLoaderManagerClient) DownloadFile(ctx context.Context, in *File, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/file.IFileLoaderManager/DownloadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iFileLoaderManagerClient) UploadFile(ctx context.Context, in *FileID, opts ...grpc.CallOption) (*File, error) {
	out := new(File)
	err := c.cc.Invoke(ctx, "/file.IFileLoaderManager/UploadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IFileLoaderManagerServer is the server API for IFileLoaderManager service.
type IFileLoaderManagerServer interface {
	DownloadFile(context.Context, *File) (*Nothing, error)
	UploadFile(context.Context, *FileID) (*File, error)
}

// UnimplementedIFileLoaderManagerServer can be embedded to have forward compatible implementations.
type UnimplementedIFileLoaderManagerServer struct {
}

func (*UnimplementedIFileLoaderManagerServer) DownloadFile(ctx context.Context, req *File) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadFile not implemented")
}
func (*UnimplementedIFileLoaderManagerServer) UploadFile(ctx context.Context, req *FileID) (*File, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadFile not implemented")
}

func RegisterIFileLoaderManagerServer(s *grpc.Server, srv IFileLoaderManagerServer) {
	s.RegisterService(&_IFileLoaderManager_serviceDesc, srv)
}

func _IFileLoaderManager_DownloadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(File)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IFileLoaderManagerServer).DownloadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/file.IFileLoaderManager/DownloadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IFileLoaderManagerServer).DownloadFile(ctx, req.(*File))
	}
	return interceptor(ctx, in, info, handler)
}

func _IFileLoaderManager_UploadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IFileLoaderManagerServer).UploadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/file.IFileLoaderManager/UploadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IFileLoaderManagerServer).UploadFile(ctx, req.(*FileID))
	}
	return interceptor(ctx, in, info, handler)
}

var _IFileLoaderManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "file.IFileLoaderManager",
	HandlerType: (*IFileLoaderManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DownloadFile",
			Handler:    _IFileLoaderManager_DownloadFile_Handler,
		},
		{
			MethodName: "UploadFile",
			Handler:    _IFileLoaderManager_UploadFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "session-grpc.proto",
}
